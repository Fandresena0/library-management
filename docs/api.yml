openapi: 3.0.3
info:
  title: Library API
  version: 1.0.1
  description: STD22112
servers:
  - url: https://library.com
paths:
  /books:
    get:
      tags:
        - book
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: filter
          schema: 
             properties:
               startDate:
                 type: string
                 format: date
               endDate:
                 type: string
                 format: date  
        - in: query
          name: page
          description: page number (default 1)
          required: false
          schema:
            type: integer
            default: 1         
        - in: query
          name: pageSize
          description: page size (default 50)
          required: false
          schema:
            type: integer
            default: 50        
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    put:
      tags:
        - book
      summary: Create or update a list of books with author
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrupdateBook'

      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /authors:
   get:
      tags:
        - Authors
      summary: Get all authors
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          required: false
          schema:
            type: string
        - in: path
          name: page
          description: page number (default 1)
          required: false
          schema:
            type: integer
            default: 1         
        - in: path
          name: pageSize
          description: page size (default 50)
          required: false
          schema:
            type: integer
            default: 50          
      responses:
        200:
          description:  get author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
   put:
      tags:
        - Authors
      summary: Update authors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/author'
      responses:
        200:
          description: The list of created or updated author
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
   delete:
      tags:
        - Authors
      summary: delete author
      description: delete all author
      responses:
        "200":
          description: all  deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/author"
            application/xml:
              schema:
                $ref: "#/components/schemas/author"
components:
  schemas:
    CrupdateBook:
       type: object
       properties:
        id:
          type: string
        bookName:
          type: string
        pageNumbers:
          type: integer
        topic:
          items:
            $ref: '#/components/schemas/topic'
        releaseDate:
          type: string
          format: date
    Book:
      allOf:
        - $ref: '#/components/schemas/CrupdateBook'
      type: object
      properties:
        author:
          items: 
            $ref: '#/components/schemas/author'
    author:
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string 
          enum:
            - M
            - F    
    topic:
      type: object
      properties:
        id:
         type: integer
        topicName:
         enum:
          - ROMANCE
          - COMEDY
          - OTHER              
    updateBookAuthor:
      type: object
      properties:
        bookId:
          type: integer
        authorId:
          type: integer
    updateTopicBook:
      type: object
      properties:
        bookId:
          type: integer
        topicId:
          type: integer
    bookWithTopic:
      allOf:
        - $ref:  '#/components/schemas/CrupdateBook'
      type: object
      properties:
        topic: 
           items:
             $ref: '#/components/schemas/topic'        
    
    authorWithTopic:
      type: object
      properties:
        author: 
          items:
           $ref: '#/components/schemas/author'
        topic: 
          items:
           $ref: '#/components/schemas/topic'
